# Script para probar la confirmaci√≥n de reserva y env√≠o de email
$backendUrl = "https://backenhotelparaiso.vercel.app"

Write-Host "üß™ PROBANDO CONFIRMACI√ìN DE RESERVA Y EMAIL" -ForegroundColor Green
Write-Host "===============================================" -ForegroundColor Green

# 1. Verificar que el backend est√© funcionando
Write-Host "`n1Ô∏è‚É£ Verificando que el backend est√© funcionando..." -ForegroundColor Yellow
try {
    $healthResponse = Invoke-RestMethod -Uri "$backendUrl/api/health" -Method GET
    Write-Host "‚úÖ Backend funcionando: $($healthResponse.message)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Error conectando al backend: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# 2. Buscar una reserva pendiente para confirmar
Write-Host "`n2Ô∏è‚É£ Buscando reserva pendiente para confirmar..." -ForegroundColor Yellow
try {
    $reservasResponse = Invoke-RestMethod -Uri "$backendUrl/api/reservas" -Method GET
    $reservaPendiente = $reservasResponse.data | Where-Object { $_.estado -eq "pendiente" } | Select-Object -First 1
    
    if ($reservaPendiente) {
        Write-Host "‚úÖ Reserva pendiente encontrada:" -ForegroundColor Green
        Write-Host "   - ID: $($reservaPendiente.id)" -ForegroundColor White
        Write-Host "   - C√≥digo: $($reservaPendiente.codigo_reserva)" -ForegroundColor White
        Write-Host "   - Cliente: $($reservaPendiente.cliente_nombre) $($reservaPendiente.cliente_apellido)" -ForegroundColor White
        Write-Host "   - Email: $($reservaPendiente.cliente_email)" -ForegroundColor White
    } else {
        Write-Host "‚ùå No se encontraron reservas pendientes" -ForegroundColor Red
        Write-Host "üí° Primero crea una reserva desde el frontend" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå Error obteniendo reservas: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# 3. Confirmar la reserva
Write-Host "`n3Ô∏è‚É£ Confirmando reserva..." -ForegroundColor Yellow
$confirmacionData = @{
    estado = "confirmada"
    observaciones = "Reserva confirmada por staff - prueba de email"
} | ConvertTo-Json

try {
    $confirmacionResponse = Invoke-RestMethod -Uri "$backendUrl/api/reservas/$($reservaPendiente.id)" -Method PUT -Body $confirmacionData -ContentType "application/json"
    
    if ($confirmacionResponse.success) {
        Write-Host "‚úÖ Reserva confirmada exitosamente!" -ForegroundColor Green
        Write-Host "üìß Email deber√≠a haberse enviado a: $($reservaPendiente.cliente_email)" -ForegroundColor Cyan
        Write-Host "üßæ Factura deber√≠a haberse generado autom√°ticamente" -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå Error confirmando reserva: $($confirmacionResponse.message)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Error en la petici√≥n de confirmaci√≥n: $($_.Exception.Message)" -ForegroundColor Red
}

# 4. Verificar que la reserva se confirm√≥
Write-Host "`n4Ô∏è‚É£ Verificando estado de la reserva..." -ForegroundColor Yellow
try {
    $reservaActualizada = Invoke-RestMethod -Uri "$backendUrl/api/reservas/$($reservaPendiente.id)" -Method GET
    
    if ($reservaActualizada.data.estado -eq "confirmada") {
        Write-Host "‚úÖ Reserva confirmada correctamente" -ForegroundColor Green
        Write-Host "üìã Estado actual: $($reservaActualizada.data.estado)" -ForegroundColor White
    } else {
        Write-Host "‚ùå La reserva no se confirm√≥ correctamente" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Error verificando reserva: $($_.Exception.Message)" -ForegroundColor Red
}

# 5. Verificar facturas generadas
Write-Host "`n5Ô∏è‚É£ Verificando facturas generadas..." -ForegroundColor Yellow
try {
    $facturasResponse = Invoke-RestMethod -Uri "$backendUrl/api/facturas?reserva_id=$($reservaPendiente.id)" -Method GET
    
    if ($facturasResponse.data -and $facturasResponse.data.Length -gt 0) {
        Write-Host "‚úÖ Factura generada exitosamente:" -ForegroundColor Green
        Write-Host "   - C√≥digo: $($facturasResponse.data[0].codigo_factura)" -ForegroundColor White
        Write-Host "   - Estado: $($facturasResponse.data[0].estado)" -ForegroundColor White
    } else {
        Write-Host "‚ö†Ô∏è No se encontraron facturas para esta reserva" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Error verificando facturas: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéâ PRUEBA COMPLETADA" -ForegroundColor Green
Write-Host "===============================================" -ForegroundColor Green
Write-Host "üìß Verifica que el email lleg√≥ a: $($reservaPendiente.cliente_email)" -ForegroundColor Cyan
Write-Host "üìã Revisa los logs en Vercel para ver el proceso completo" -ForegroundColor Cyan
Write-Host "üîó URL del backend: $backendUrl" -ForegroundColor Cyan 